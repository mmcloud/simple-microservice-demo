# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ms.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ms.proto',
  package='leaplending',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x08ms.proto\x12\x0bleaplending\"\x1f\n\x0fSayHelloRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"#\n\x10SayHelloResponse\x12\x0f\n\x07message\x18\x01 \x01(\t2R\n\x05Hello\x12I\n\x08SayHello\x12\x1c.leaplending.SayHelloRequest\x1a\x1d.leaplending.SayHelloResponse\"\x00\x62\x06proto3'
)




_SAYHELLOREQUEST = _descriptor.Descriptor(
  name='SayHelloRequest',
  full_name='leaplending.SayHelloRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='leaplending.SayHelloRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=56,
)


_SAYHELLORESPONSE = _descriptor.Descriptor(
  name='SayHelloResponse',
  full_name='leaplending.SayHelloResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='leaplending.SayHelloResponse.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=58,
  serialized_end=93,
)

DESCRIPTOR.message_types_by_name['SayHelloRequest'] = _SAYHELLOREQUEST
DESCRIPTOR.message_types_by_name['SayHelloResponse'] = _SAYHELLORESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SayHelloRequest = _reflection.GeneratedProtocolMessageType('SayHelloRequest', (_message.Message,), {
  'DESCRIPTOR' : _SAYHELLOREQUEST,
  '__module__' : 'ms_pb2'
  # @@protoc_insertion_point(class_scope:leaplending.SayHelloRequest)
  })
_sym_db.RegisterMessage(SayHelloRequest)

SayHelloResponse = _reflection.GeneratedProtocolMessageType('SayHelloResponse', (_message.Message,), {
  'DESCRIPTOR' : _SAYHELLORESPONSE,
  '__module__' : 'ms_pb2'
  # @@protoc_insertion_point(class_scope:leaplending.SayHelloResponse)
  })
_sym_db.RegisterMessage(SayHelloResponse)



_HELLO = _descriptor.ServiceDescriptor(
  name='Hello',
  full_name='leaplending.Hello',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=95,
  serialized_end=177,
  methods=[
  _descriptor.MethodDescriptor(
    name='SayHello',
    full_name='leaplending.Hello.SayHello',
    index=0,
    containing_service=None,
    input_type=_SAYHELLOREQUEST,
    output_type=_SAYHELLORESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_HELLO)

DESCRIPTOR.services_by_name['Hello'] = _HELLO

# @@protoc_insertion_point(module_scope)
